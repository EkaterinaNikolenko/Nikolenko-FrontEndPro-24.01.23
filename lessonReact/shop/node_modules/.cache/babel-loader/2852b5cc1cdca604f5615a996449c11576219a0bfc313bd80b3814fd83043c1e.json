{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\test\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\js\\\\lessonReact\\\\shop\\\\src\\\\modals\\\\Login\\\\LoginForm.jsx\";\nimport React from 'react';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginModal(_ref) {\n  let {\n    closeModal\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: (values, _ref2) => {\n        let {\n          setSubmitting\n        } = _ref2;\n        setTimeout(() => {\n          console.log(\"Logging in\", values);\n          setSubmitting(false);\n          closeModal();\n        }, 500);\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email().required(\"Required\"),\n        password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n      }),\n      children: props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit\n        } = props;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            name: \"email\",\n            type: \"text\",\n            placeholder: \"Enter your email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Enter your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = LoginModal;\nexport default LoginModal;\nvar _c;\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"names":["React","Formik","Yup","jsxDEV","_jsxDEV","LoginModal","_ref","closeModal","children","initialValues","email","password","onSubmit","values","_ref2","setSubmitting","setTimeout","console","log","validationSchema","object","shape","string","required","min","matches","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","name","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/test/OneDrive/Рабочий стол/js/lessonReact/shop/src/modals/Login/LoginForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\"\r\n\r\nfunction LoginModal({closeModal}) {\r\n\r\n  return (\r\n    <div>\r\n        <Formik\r\n            initialValues={{ email: \"\", password: \"\" }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n                console.log(\"Logging in\", values);\r\n                setSubmitting(false);\r\n                closeModal();\r\n            }, 500);\r\n            }}\r\n            validationSchema={ Yup.object().shape({\r\n                email: Yup.string().email().required(\"Required\"),\r\n                password: Yup.string()\r\n                .required(\"No password provided.\")\r\n                .min(8, \"Password is too short\")\r\n                .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\r\n            })}\r\n            >\r\n                {props => {\r\n                    const {\r\n                        values,\r\n                        touched,\r\n                        errors,\r\n                        isSubmitting,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit\r\n                    } = props;\r\n\r\n                    return (\r\n                        <form onSubmit={handleSubmit}>\r\n\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter your email\"\r\n                        />\r\n\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Enter your password\"\r\n                        />\r\n\r\n                        <button type=\"submit\">\r\n                            Login\r\n                        </button>\r\n\r\n                        </form>\r\n                    );\r\n\r\n                    }}\r\n\r\n        </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginModal;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,QAAQ;AAC7B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAAC,IAAA,EAAe;EAAA,IAAd;IAACC;EAAU,CAAC,GAAAD,IAAA;EAE9B,oBACEF,OAAA;IAAAI,QAAA,eACIJ,OAAA,CAACH,MAAM;MACHQ,aAAa,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAC3CC,QAAQ,EAAEA,CAACC,MAAM,EAAAC,KAAA,KAAwB;QAAA,IAAtB;UAAEC;QAAc,CAAC,GAAAD,KAAA;QACpCE,UAAU,CAAC,MAAM;UACbC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEL,MAAM,CAAC;UACjCE,aAAa,CAAC,KAAK,CAAC;UACpBR,UAAU,CAAC,CAAC;QAChB,CAAC,EAAE,GAAG,CAAC;MACP,CAAE;MACFY,gBAAgB,EAAGjB,GAAG,CAACkB,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;QAClCX,KAAK,EAAER,GAAG,CAACoB,MAAM,CAAC,CAAC,CAACZ,KAAK,CAAC,CAAC,CAACa,QAAQ,CAAC,UAAU,CAAC;QAChDZ,QAAQ,EAAET,GAAG,CAACoB,MAAM,CAAC,CAAC,CACrBC,QAAQ,CAAC,uBAAuB,CAAC,CACjCC,GAAG,CAAC,CAAC,EAAE,uBAAuB,CAAC,CAC/BC,OAAO,CAAC,aAAa,EAAE,iCAAiC;MAC7D,CAAC,CAAE;MAAAjB,QAAA,EAEEkB,KAAK,IAAI;QACN,MAAM;UACFb,MAAM;UACNc,OAAO;UACPC,MAAM;UACNC,YAAY;UACZC,YAAY;UACZC,UAAU;UACVC;QACJ,CAAC,GAAGN,KAAK;QAET,oBACItB,OAAA;UAAMQ,QAAQ,EAAEoB,YAAa;UAAAxB,QAAA,gBAE7BJ,OAAA;YAAO6B,OAAO,EAAC,OAAO;YAAAzB,QAAA,EAAC;UAAK;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpCjC,OAAA;YACIkC,EAAE,EAAC,OAAO;YACVC,IAAI,EAAC,OAAO;YACZC,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC;UAAkB;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,eAEFjC,OAAA;YAAO6B,OAAO,EAAC,UAAU;YAAAzB,QAAA,EAAC;UAAQ;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1CjC,OAAA;YACIkC,EAAE,EAAC,UAAU;YACbC,IAAI,EAAC,UAAU;YACfC,IAAI,EAAC,UAAU;YACfC,WAAW,EAAC;UAAqB;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eAEFjC,OAAA;YAAQoC,IAAI,EAAC,QAAQ;YAAAhC,QAAA,EAAC;UAEtB;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEH,CAAC;MAGX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACK,EAAA,GA/DQrC,UAAU;AAiEnB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}