{"ast":null,"code":"var _s = $RefreshSig$();\nimport { combineReducers } from '@reduxjs/toolkit';\nimport usersSlice from './usersSlice';\nimport { useDispatch } from 'react-redux';\nconst rootReducer = combineReducers({\n  user: usersSlice\n});\n\n// Визначаємо тип для функції useDispatch, яка повертає AppDispatch тип зі store.\n\n// Експортуємо хук useAppDispatch, який повертає useDispatch<AppDispatch>().\nexport const useAppDispatch = () => {\n  _s();\n  return useDispatch();\n};\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["combineReducers","usersSlice","useDispatch","rootReducer","user","useAppDispatch","_s"],"sources":["C:/Users/test/OneDrive/Рабочий стол/js/hw/auth-redux/src/reducer/reducers.ts"],"sourcesContent":["import { combineReducers } from '@reduxjs/toolkit'\nimport usersSlice from './usersSlice'\nimport { AppDispatch } from '../store/store';\nimport { useDispatch } from 'react-redux';\nconst rootReducer = combineReducers({\n    user:usersSlice\n})\nexport type RootState = ReturnType<typeof rootReducer>\n\n// Визначаємо тип для функції useDispatch, яка повертає AppDispatch тип зі store.\ntype UseAppDispatch = () => AppDispatch;\n\n// Експортуємо хук useAppDispatch, який повертає useDispatch<AppDispatch>().\nexport const useAppDispatch: UseAppDispatch = () => useDispatch<AppDispatch>();"],"mappings":";AAAA,SAASA,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,UAAU,MAAM,cAAc;AAErC,SAASC,WAAW,QAAQ,aAAa;AACzC,MAAMC,WAAW,GAAGH,eAAe,CAAC;EAChCI,IAAI,EAACH;AACT,CAAC,CAAC;;AAGF;;AAGA;AACA,OAAO,MAAMI,cAA8B,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMJ,WAAW,CAAc,CAAC;AAAA;AAACI,EAAA,CAAlED,cAA8B;EAAA,QAASH,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}